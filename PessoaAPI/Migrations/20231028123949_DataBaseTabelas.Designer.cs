// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PessoaAPI.Data.Context;

#nullable disable

namespace PessoaAPI.Migrations
{
    [DbContext(typeof(FluentContext))]
    [Migration("20231028123949_DataBaseTabelas")]
    partial class DataBaseTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PessoaAPI.Models.Pessoa.CaracteristicasFisicas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Altura")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "altura");

                    b.Property<int>("Peso")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "peso");

                    b.HasKey("Id");

                    b.ToTable("CaracteristicasFisicas");
                });

            modelBuilder.Entity("PessoaAPI.Models.Pessoa.DadosPessoais", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "cpf");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "data_nasc");

                    b.Property<int>("Idade")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "idade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nome");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "rg");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "sexo");

                    b.Property<string>("Signo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "signo");

                    b.HasKey("CPF");

                    b.ToTable("DadosPessoais");
                });

            modelBuilder.Entity("PessoaAPI.Models.Pessoa.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "endereco");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("PessoaAPI.Models.Pessoa.Filiacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mae")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "mae");

                    b.Property<string>("Pai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "pai");

                    b.HasKey("Id");

                    b.ToTable("Filiacao");
                });

            modelBuilder.Entity("PessoaAPI.Models.Pessoa.Online", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "senha");

                    b.HasKey("Id");

                    b.ToTable("Online");
                });

            modelBuilder.Entity("PessoaAPI.Models.Pessoa.Outros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CorFavorita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "cor");

                    b.Property<string>("TipoSanguineo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "tipo_sanguineo");

                    b.HasKey("Id");

                    b.ToTable("Outros");
                });

            modelBuilder.Entity("PessoaAPI.Models.Pessoa.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaracteristicasFisicasId")
                        .HasColumnType("int");

                    b.Property<string>("DadosPessoaisCPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("FiliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("OnlineId")
                        .HasColumnType("int");

                    b.Property<int>("OutrosId")
                        .HasColumnType("int");

                    b.Property<int>("TelefonesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaracteristicasFisicasId");

                    b.HasIndex("DadosPessoaisCPF");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("FiliacaoId");

                    b.HasIndex("OnlineId");

                    b.HasIndex("OutrosId");

                    b.HasIndex("TelefonesId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("PessoaAPI.Models.Pessoa.Telefones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "celular");

                    b.Property<string>("TelefoneFixo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "telefone_fixo");

                    b.HasKey("Id");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("PessoaAPI.Models.Pessoa.Pessoa", b =>
                {
                    b.HasOne("PessoaAPI.Models.Pessoa.CaracteristicasFisicas", "CaracteristicasFisicas")
                        .WithMany()
                        .HasForeignKey("CaracteristicasFisicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PessoaAPI.Models.Pessoa.DadosPessoais", "DadosPessoais")
                        .WithMany()
                        .HasForeignKey("DadosPessoaisCPF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PessoaAPI.Models.Pessoa.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PessoaAPI.Models.Pessoa.Filiacao", "Filiacao")
                        .WithMany()
                        .HasForeignKey("FiliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PessoaAPI.Models.Pessoa.Online", "Online")
                        .WithMany()
                        .HasForeignKey("OnlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PessoaAPI.Models.Pessoa.Outros", "Outros")
                        .WithMany()
                        .HasForeignKey("OutrosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PessoaAPI.Models.Pessoa.Telefones", "Telefones")
                        .WithMany()
                        .HasForeignKey("TelefonesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaracteristicasFisicas");

                    b.Navigation("DadosPessoais");

                    b.Navigation("Endereco");

                    b.Navigation("Filiacao");

                    b.Navigation("Online");

                    b.Navigation("Outros");

                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
